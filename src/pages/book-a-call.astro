---
import { Image } from "astro:assets";
let { title } = Astro.props;
import Layout from "$lib/layouts/Layout.astro";
import CopyEmail from "$lib/components/CopyEmail.svelte";
---

<Layout title="Rectangle Services â€” Senior Product Design Services">
    <div class="col-span-3 md:col-span-2 flex flex-col gap-4">
        <h1 class="text-5xl font-black">Book a call</h1>
        <p>
            If you've got a project in mind, let's hop on a call and have a
            chat.
        </p>
        <p>
            I'm available for a full-time consultancy, or part-time contracts.
        </p>
        <p>
            I'm also available for short-term projects, and I'm happy to work
            with you on a project that's already in the works.
        </p>
        <p>Can't see a time that works, or just pefer email?</p>
        <CopyEmail client:only="svelte" />
    </div>
    <div
        class="col-span-3 md:col-span-5 md:col-start-4 w-full min-w-full md:grid-rows-2"
    >
        <!-- Cal inline embed code begins -->
        <div
            style="
        width:100%;height:100%;overflow:scroll"
            id="my-cal-inline"
        >
        </div>
        <script type="text/javascript">
            (function (C, A, L) {
                let p = function (a, ar) {
                    a.q.push(ar);
                };
                let d = C.document;
                C.Cal =
                    C.Cal ||
                    function () {
                        let cal = C.Cal;
                        let ar = arguments;
                        if (!cal.loaded) {
                            cal.ns = {};
                            cal.q = cal.q || [];
                            d.head.appendChild(d.createElement("script")).src =
                                A;
                            cal.loaded = true;
                        }
                        if (ar[0] === L) {
                            const api = function () {
                                p(api, arguments);
                            };
                            const namespace = ar[1];
                            api.q = api.q || [];
                            if (typeof namespace === "string") {
                                cal.ns[namespace] = cal.ns[namespace] || api;
                                p(cal.ns[namespace], ar);
                                p(cal, ["initNamespace", namespace]);
                            } else p(cal, ar);
                            return;
                        }
                        p(cal, ar);
                    };
            })(window, "https://app.cal.com/embed/embed.js", "init");
            Cal("init", { origin: "https://cal.com" });

            Cal("inline", {
                elementOrSelector: "#my-cal-inline",
                calLink: "charlie/rectangle-services",
                layout: "month_view",
            });

            Cal("ui", {
                theme: "light",
                styles: { branding: { brandColor: "#fafafa" } },
                hideEventTypeDetails: false,
                layout: "month_view",
            });
        </script>
        <!-- Cal inline embed code ends -->
    </div>
</Layout>
